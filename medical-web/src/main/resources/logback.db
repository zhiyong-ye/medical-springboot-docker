BEGIN;
DROP TABLE IF EXISTS logging_event_property;
DROP TABLE IF EXISTS logging_event_exception;
DROP TABLE IF EXISTS logging_event;
COMMIT;


BEGIN;
CREATE TABLE `logging_event` (
	`timestmp` BIGINT (20) NOT NULL,
	`formatted_message` text NOT NULL,
	`logger_name` VARCHAR (254) NOT NULL,
	`level_string` VARCHAR (254) NOT NULL,
	`thread_name` VARCHAR (254) DEFAULT NULL,
	`reference_flag` SMALLINT (6) DEFAULT NULL,
	`arg0` VARCHAR (254) DEFAULT NULL,
	`arg1` VARCHAR (254) DEFAULT NULL,
	`arg2` VARCHAR (254) DEFAULT NULL,
	`arg3` VARCHAR (254) DEFAULT NULL,
	`caller_filename` VARCHAR (254) NOT NULL,
	`caller_class` VARCHAR (254) NOT NULL,
	`caller_method` VARCHAR (254) NOT NULL,
	`caller_line` CHAR (4) NOT NULL,
	`event_id` BIGINT (20) NOT NULL AUTO_INCREMENT,
	PRIMARY KEY (`event_id`)
) ENGINE = INNODB AUTO_INCREMENT = 531 DEFAULT CHARSET = utf8;
COMMIT;


BEGIN;
CREATE TABLE `logging_event_property` (
	`event_id` BIGINT (20) NOT NULL,
	`mapped_key` VARCHAR (254) NOT NULL,
	`mapped_value` text,
	PRIMARY KEY (`event_id`, `mapped_key`),
	CONSTRAINT `logging_event_property_ibfk_1` FOREIGN KEY (`event_id`) REFERENCES `logging_event` (`event_id`)
) ENGINE = INNODB DEFAULT CHARSET = utf8;
COMMIT;


BEGIN;
CREATE TABLE `logging_event_exception` (
	`event_id` BIGINT (20) NOT NULL,
	`i` SMALLINT (6) NOT NULL,
	`trace_line` VARCHAR (254) NOT NULL,
	PRIMARY KEY (`event_id`, `i`),
	CONSTRAINT `logging_event_exception_ibfk_1` FOREIGN KEY (`event_id`) REFERENCES `logging_event` (`event_id`)
) ENGINE = INNODB DEFAULT CHARSET = utf8;
COMMIT;